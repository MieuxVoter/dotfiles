version: '2'

services:
  
  postgres:
    image: postgres:11
    container_name: $N8N_DB_HOST
    restart: unless-stopped
    environment:
      - POSTGRES_USER=$N8N_DB_USER
      - POSTGRES_PASSWORD=$N8N_DB_PASSWORD
      - POSTGRES_DB=$N8N_DB_DATABASE
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
    volumes:
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    networks:
      - lan
    volumes:
      - db:/var/lib/mysql

  n8n:
    image: n8nio/n8n
    container_name: n8n
    restart: unless-stopped
    depends_on:
      - database
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Paris
      - WEBHOOK_URL=$N8N_WEBHOOK_URL
      - DB_TYPE=$N8N_DB_TYPE
      - DB_POSTGRESDB_PORT=$N8N_DB_PORT
      - DB_POSTGRESDB_DATABASE=$N8N_DB_DATABASE
      - DB_POSTGRESDB_HOST=$N8N_DB_HOST
      - DB_POSTGRESDB_USER=$N8N_DB_USER
      - DB_POSTGRESDB_PASSWORD=$N8N_DB_PASSWORD
    volumes:
      - ${N8N_VOLUME}:/home/node/.n8n
    networks:
      - n8n-net
      - lan
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik_network"
      - "traefik.http.routers.n8n.entrypoints=web,websecure"
      - "traefik.http.routers.n8n.rule=Host(`n8n.${N8N_DOMAIN}`)"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=leresolver"

networks:
  lan: {}
  n8n-net:
    external: true
    name: traefik_network

volumes:
  db:
